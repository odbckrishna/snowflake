/**** Check clustering information ***/

DESC TABLE DEMO_DB.PUBLIC.CUSTOMER_NOCLUSTER

create or replace transient TABLE CUSTOMER_CLUSTERED (
	C_CUSTKEY NUMBER(38,0) NOT NULL,
	C_NAME VARCHAR(25) NOT NULL,
	C_ADDRESS VARCHAR(40) NOT NULL,
	C_NATIONKEY NUMBER(38,0) NOT NULL,
	C_PHONE VARCHAR(15) NOT NULL,
	C_ACCTBAL NUMBER(12,2) NOT NULL,
	C_MKTSEGMENT VARCHAR(10),
	C_COMMENT VARCHAR(117)
) CLUSTER BY (C_MKTSEGMENT)

INSERT INTO  DEMO_DB.PUBLIC.CUSTOMER_CLUSTERED
SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.CUSTOMER;

SELECT SYSTEM$CLUSTERING_INFORMATION('CUSTOMER_CLUSTERED');


CREATE OR REPLACE TRANSIENT TABLE DEMO_DB.PUBLIC.CUSTOMER_NOCLUSTER
AS
SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.CUSTOMER;


SELECT SYSTEM$CLUSTERING_INFORMATION('CUSTOMER_NOCLUSTER','(C_MKTSEGMENT)');

SELECT SYSTEM$CLUSTERING_INFORMATION('CUSTOMER_NOCLUSTER','(C_MKTSEGMENT,C_CUSTKEY)');

/**** Imporve performence without applying clustering **************/

CREATE OR REPLACE TRANSIENT TABLE  DEMO_DB.PUBLIC.CUSTOMER_ORDERBY
AS
SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.CUSTOMER
ORDER BY C_MKTSEGMENT

SELECT SYSTEM$CLUSTERING_INFORMATION('CUSTOMER_ORDERBY','(C_MKTSEGMENT)');


/*********************** How clustering works behind the sceens ********************/

create or replace transient TABLE CUSTOMER_HOWCLUSTERWORKS (
	C_CUSTKEY NUMBER(38,0) NOT NULL,
	C_NAME VARCHAR(25) NOT NULL,
	C_ADDRESS VARCHAR(40) NOT NULL,
	C_NATIONKEY NUMBER(38,0) NOT NULL,
	C_PHONE VARCHAR(15) NOT NULL,
	C_ACCTBAL NUMBER(12,2) NOT NULL,
	C_MKTSEGMENT VARCHAR(10),
	C_COMMENT VARCHAR(117)
) CLUSTER BY (C_MKTSEGMENT)

-- CREATE OR REPLACE TRANSIENT TABLE DEMO_DB.PUBLIC.CUSTOMER_HOWCLUSTERWORKS CLONE DEMO_DB.PUBLIC.CUSTOMER_NOCLUSTER

-- Data will be loaded to table. while loading snowflake will not organize micro partitions.
-- After loading data snowflake will re organize the micro partitions. 

INSERT INTO  DEMO_DB.PUBLIC.CUSTOMER_HOWCLUSTERWORKS
SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF1000.CUSTOMER

SELECT SYSTEM$CLUSTERING_INFORMATION('CUSTOMER_HOWCLUSTERWORKS','(C_MKTSEGMENT)');


/************************* Apply clustering using alter ******************************/

ALTER  TABLE DEMO_DB.PUBLIC.CUSTOMER_NOCLUSTER CLUSTER BY (C_MKTSEGMENT);

ALTER  TABLE DEMO_DB.PUBLIC.CUSTOMER_NOCLUSTER RECLUSTER;

SELECT SYSTEM$CLUSTERING_INFORMATION('CUSTOMER_NOCLUSTER','(C_MKTSEGMENT)');


/***** CALCULATE CARDINALITY ******/

SELECT DISTINCT C_ADDRESS FROM DEMO_DB.PUBLIC.CUSTOMER_NOCLUSTER CLUSTER 

SELECT 238609294/1500000000

SELECT DISTINCT C_MKTSEGMENT FROM DEMO_DB.PUBLIC.CUSTOMER_NOCLUSTER CLUSTER

SELECT 5/1500000000
